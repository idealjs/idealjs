name: Home Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main

jobs:
  pre_deploy:
    name: Deploy Vercel Preview & Build Push Image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/home
    outputs:
      TAG: ${{ steps.build_push.outputs.TAG }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "yarn"

      - name: Pull Vercel Environment Information
        run: |
          yarn install --immutable
          yarn vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          cp .vercel/.env.production.local .env

      - name: Build Project Artifacts
        run: yarn vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: |
          yarn vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} > deploy.log

      - name: Login to Aliyun Container Registry
        run: |
          echo ${{ secrets.ALIYUN_DOCKER_PASSWORD }} | docker login ${{ secrets.ALIYUN_DOCKER_REGISTRY }} \
            -u ${{ secrets.ALIYUN_DOCKER_USERNAME }} \
            --password-stdin

      - name: Build and Push Docker Image
        id: build_push
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t ${{ secrets.ALIYUN_DOCKER_REGISTRY }}/idealjs/home:$TAG .
          docker push ${{ secrets.ALIYUN_DOCKER_REGISTRY }}/idealjs/home:$TAG
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Clean
        if: always()
        run: |
          docker logout ${{ secrets.ALIYUN_DOCKER_REGISTRY }}

  Server-Deploy:
    needs: pre_deploy
    env:
      TAG: ${{ needs.pre_deploy.outputs.TAG }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/tmp.key
          chmod 600 ~/.ssh/tmp.key
          cat >>~/.ssh/config <<END
          Host idealjs.com
            HostName $SSH_HOST
            User idealjs
            IdentityFile ~/.ssh/tmp.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.IDEALJS_ALI_SSH_KEY }}
          SSH_HOST: ${{ secrets.IDEALJS_ALI_SSH_HOST }}

      - name: Create Network (if not exists)
        continue-on-error: true
        run: |
          ssh idealjs.com "docker network create traefik-network"

      - name: Deploy to Server
        run: |
          ssh idealjs.com "echo ${{ secrets.ALIYUN_DOCKER_PASSWORD }} | docker login ${{ secrets.ALIYUN_DOCKER_REGISTRY }} \
            -u ${{ secrets.ALIYUN_DOCKER_USERNAME }} \
            --password-stdin"
          ssh idealjs.com "mkdir -p ~/workspace/home"
          scp ./packages/home/docker-compose.yml idealjs.com:~/workspace/home/docker-compose.yml
          ssh idealjs.com "echo $TAG > ~/workspace/home/test"
          ssh idealjs.com "TAG=$TAG docker compose -f ~/workspace/home/docker-compose.yml up -d"
          ssh idealjs.com "docker logout ${{ secrets.ALIYUN_DOCKER_REGISTRY }}"

      - name: Clean
        if: always()
        run: |
          rm ~/.ssh/tmp.key
