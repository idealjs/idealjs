version: "3"

services:
  infisical:
    container_name: infisical_backend
    image: infisical/infisical:latest-postgres
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - 80:8080
    environment:
      - NODE_ENV=production
      - DB_CONNECTION_URI=postgres://postgres:${POSTGRES_PASSWORD-p0stgr3s}@postgres:5432/infisical
      - REDIS_URL=redis://redis:6379
      - AUTH_SECRET=${INFISICAL_AUTH_SECRET-authsecret}
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.idealjs-infisical.rule=Host(`infisical.idealjs.com`)"
      - "traefik.http.routers.idealjs-infisical.entrypoints=websecure"
      - "traefik.http.routers.idealjs-infisical.tls=true"
      - "traefik.http.routers.idealjs-infisical.tls.certresolver=idealjs-resolver"
      - "traefik.http.routers.idealjs-infisical.service=idealjs-infisical"
      - "traefik.http.services.idealjs-infisical.loadbalancer.server.port=8080"

  redis:
    image: redis
    container_name: idealjs_infisical_redis
    networks:
      - traefik-network
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis_data:/data

volumes:
  redis_data:

networks:
  traefik-network:
    external: true
